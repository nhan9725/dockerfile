#events {
#  worker_connections 768;
#}

#http {
  # Nginx will handle gzip compression of responses from the app server
#  gzip on;
#  gzip_proxied any;
#  gzip_types text/plain application/json;
#  gzip_min_length 1000;

#  server {
#    listen 80;

    # Nginx will reject anything not matching /api
#    location /api {
      # Reject requests with unsupported HTTP method
#      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
#        return 405;
#      }

      # Only requests matching the whitelist expectations will
      # get sent to the application server
#      proxy_pass http://0.0.0.0:8080;
#      proxy_http_version 1.1;
#      proxy_set_header Upgrade $http_upgrade;
#      proxy_set_header Connection 'upgrade';
#      proxy_set_header Host $host;
#      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#      proxy_cache_bypass $http_upgrade;
#    }
#  }
#}

#####
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
        client_body_buffer_size     10M;
        client_max_body_size        10M;
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

}

